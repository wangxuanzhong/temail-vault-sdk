<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2019 Syswin
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>temail-vault</artifactId>
    <groupId>com.syswin.temail</groupId>
    <version>1.2.0</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>vault-native</artifactId>
  <packaging>so</packaging>

  <properties>
    <algorithm.include.dir>${basedir}/../libecc/src/main/c++/include</algorithm.include.dir>
    <algorithm.lib.dir>${basedir}/../libecc/libs</algorithm.lib.dir>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>rename-file</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${algorithm.lib.dir}/${platform.name}/libecc.${platform.lib.ext}</sourceFile>
              <destinationFile>${basedir}/src/main/cpp/lib/native/libecc.a</destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
          <name>Linux</name>
        </os>
      </activation>
      <properties>
        <platform.name>linux</platform.name>
        <platform.lib.ext>a</platform.lib.ext>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerExecutable>g++</compilerExecutable>
              <linkerExecutable>g++</linkerExecutable>
              <sources>
                <source>
                  <directory>${basedir}/src/main/cpp/jni</directory>
                  <fileNames>
                    <fileName>CipherJni.cpp</fileName>
                  </fileNames>
                </source>
                <source>
                  <directory>${algorithm.include.dir}</directory>
                </source>
                <source>
                  <directory>${basedir}/src/main/cpp/</directory>
                  <fileNames>
                    <fileName>ecc_vault_cipher.cpp</fileName>
                  </fileNames>
                </source>
              </sources>
              <compilerStartOptions>
                <compilerStartOption>-I ${JAVA_HOME}/include/</compilerStartOption>
                <compilerStartOption>-I ${JAVA_HOME}/include/linux/</compilerStartOption>
              </compilerStartOptions>
              <compilerEndOptions>
                <compilerEndOption>-fPIC</compilerEndOption>
                <compilerEndOption>-std=gnu++11</compilerEndOption>
              </compilerEndOptions>
              <linkerStartOptions>
                <linkerStartOption>-I ${JAVA_HOME}/lib/</linkerStartOption>
                <linkerStartOption>-L ${basedir}/src/main/cpp/lib</linkerStartOption>
                <linkerStartOption>-L ${algorithm.lib.dir}/${platform.name}</linkerStartOption>
              </linkerStartOptions>
              <linkerEndOptions>
                <linkerEndOption>-shared</linkerEndOption>
                <linkerEndOption>-fPIC</linkerEndOption>
                <linkerEndOption>-lstdc++</linkerEndOption>
                <linkerEndOption>-ldl</linkerEndOption>
                <linkerEndOption>-lecc</linkerEndOption>
                <linkerEndOption>-luuid</linkerEndOption>
                <linkerEndOption>-lssl</linkerEndOption>
                <linkerEndOption>-lcrypto</linkerEndOption>
                <linkerEndOption>-lecc</linkerEndOption>
              </linkerEndOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <platform.name>mac</platform.name>
        <platform.lib.ext>dylib</platform.lib.ext>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerExecutable>g++</compilerExecutable>
              <linkerExecutable>g++</linkerExecutable>
              <sources>
                <source>
                  <directory>${basedir}/src/main/cpp/jni</directory>
                  <fileNames>
                    <fileName>CipherJni.cpp</fileName>
                  </fileNames>
                </source>
                <source>
                  <directory>${algorithm.include.dir}</directory>
                </source>
                <source>
                  <directory>${basedir}/src/main/cpp/</directory>
                  <fileNames>
                    <fileName>ecc_vault_cipher.cpp</fileName>
                  </fileNames>
                </source>
              </sources>
              <compilerStartOptions>
                <compilerStartOption>-I ${JAVA_HOME}/include/</compilerStartOption>
                <compilerStartOption>-I ${JAVA_HOME}/include/darwin/</compilerStartOption>
              </compilerStartOptions>
              <compilerEndOptions>
                <compilerEndOption>-fPIC</compilerEndOption>
                <compilerEndOption>-std=gnu++11</compilerEndOption>
              </compilerEndOptions>
              <linkerStartOptions>
                <linkerStartOption>-L ${JAVA_HOME}/lib/</linkerStartOption>
                <linkerStartOption>-L /usr/local/opt/openssl/lib/</linkerStartOption>
                <linkerStartOption>-L ${algorithm.lib.dir}/${platform.name}</linkerStartOption>
              </linkerStartOptions>
              <linkerEndOptions>
                <linkerEndOption>-shared</linkerEndOption>
                <linkerEndOption>-fPIC</linkerEndOption>
                <linkerEndOption>-lstdc++</linkerEndOption>
                <linkerEndOption>-ldl</linkerEndOption>
                <linkerEndOption>-lssl</linkerEndOption>
                <linkerEndOption>-lcrypto</linkerEndOption>
                <linkerEndOption>-lecc</linkerEndOption>
              </linkerEndOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>Windows</family>
        </os>
      </activation>
      <properties>
        <platform.name>win</platform.name>
        <platform.lib.ext>dll</platform.lib.ext>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerExecutable>g++</compilerExecutable>
              <linkerExecutable>g++</linkerExecutable>
              <sources>
                <source>
                  <directory>${basedir}/src/main/cpp/jni</directory>
                  <fileNames>
                    <fileName>CipherJni.cpp</fileName>
                  </fileNames>
                </source>
                <source>
                  <directory>${algorithm.include.dir}</directory>
                </source>
                <source>
                  <directory>${basedir}/src/main/cpp/</directory>
                  <fileNames>
                    <fileName>ecc_vault_cipher.cpp</fileName>
                  </fileNames>
                </source>
              </sources>
              <compilerStartOptions>
                <compilerStartOption>-I ${JAVA_HOME}/include/</compilerStartOption>
                <compilerStartOption>-I ${JAVA_HOME}/include/win32/</compilerStartOption>
              </compilerStartOptions>
              <compilerEndOptions>
                <compilerEndOption>-fPIC</compilerEndOption>
                <compilerEndOption>-std=gnu++11</compilerEndOption>
              </compilerEndOptions>
              <linkerStartOptions>
                <linkerStartOption>-L ${JAVA_HOME}/lib/</linkerStartOption>
                <linkerStartOption>-L C:/OpenSSL-x64/lib/</linkerStartOption>
                <linkerStartOption>-L ${algorithm.lib.dir}/${platform.name}</linkerStartOption>
              </linkerStartOptions>
              <linkerEndOptions>
                <linkerEndOption>-shared</linkerEndOption>
                <linkerEndOption>-fPIC</linkerEndOption>
                <linkerEndOption>-lstdc++</linkerEndOption>
                <linkerEndOption>-lssl</linkerEndOption>
                <linkerEndOption>-lcrypto</linkerEndOption>
                <linkerEndOption>-lecc</linkerEndOption>
              </linkerEndOptions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
